import glob
import os
from astropy.io import fits


def add_wcs_information(image_filters, dirdownload):
    """Adds WCS information generated by astrometry.net to all images.

    For each filter of images the primary HDR is stored with the correct
    filter keyword added in the variable wcs_prihdr. All images generated
    by ISR.py (without WCS info) are retrieved by filter. A directory is
    made to store the newly-generated files with WCS information by filter.
    The files are then written with the correct primary HDR to this
    directory.

    Parameters
    ----------
    image_filters : list
        List containing a string of each filter keyword found in the header
        of the flat field and light frame images.
    dirdownload : str
        Directory that "new-image.fits", generated by astrometry.net,
        has been downloaded in.

    Returns
    -------
    None
    """
    # Iterates algorithm for each filter.
    for im_filter in image_filters:
        # Retrieves reference image with WCS information generated by
        # astrometry.net.
        reference_image = glob.glob(os.path.join(dirdownload,
                                                 "new-image.fits"))
        wcs_hdulist = None
        wcs_prihdr = None
        # Retrives prihdr with WCS coordinates and correct filter keyword.
        for i in reference_image:
            wcs_hdulist = fits.open(i)
            hdulist[0].header['FILTER'] = im_filter
            wcs_prihdr = wcs_hdulist[0].header

        # Retrieves ISR images of correct filter.
        isr_images = glob.glob(os.path.join(dirtarget + '/ISR_Images/' +
                                            im_filter, "*.fits"))

        # Makes directory for images with WCS information.
        os.mkdir(dirtarget + 'ISR_Images/' + im_filter + '/_WCS_Images')

        # Saves images with primary HDR that includes WCS information.
        n = 0
        for j in isr_images:
            n += 1
            image = fits.getdata(j)
            hdu = fits.PrimaryHDU(image, header=wcs_prihdr)
            hdulist = fits.HDUList([hdu])
            hdulist.writeto((dirtarget + 'ISR_Images/' + im_filter +
                             '/WCS_Images/WCS_' + target +
                             '_{}.fits'.format(n)), overwrite=True)
